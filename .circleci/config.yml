# Build OrangeCrab Gateware/Firmware on CI
version: 2
jobs:
  build:
    docker:
      # Use Ubuntu Base Image
      - image: ubuntu:18.04

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: install litex-buildenv
          command: |
            apt-get update
            apt-get install -y git sudo
            export DEBIAN_FRONTEND=noninteractive
            ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime
            apt-get install -y tzdata
            dpkg-reconfigure --frontend noninteractive tzdata
            useradd ubuntu
            git clone https://github.com/timvideos/litex-buildenv
            export CPU=vexriscv             # Soft CPU architecture
            export CPU_VARIANT=minimal      # Use a resource-constrained variant to make up5k happy
            export PLATFORM=orangecrab      # Target platform Icebreaker, or PLATFORM=tinyfpga_bx for TinyFPGA BX
            export FIRMWARE=micropython
            export TARGET=base
            export HDMI2USB_UDEV_IGNORE=1
            sudo chown -hR ubuntu litex-buildenv
            cd litex-buildenv
            ./scripts/debian-setup.sh
            sudo -u ubuntu ./scripts/download-env.sh
            sudo -u ubuntu bash -c "source ./scripts/enter-env.sh"
      - run:
          name: export VexriscV and attempt to build with pjtrellis
          command: |
             cd litex-buildenv
             export CPU=vexriscv             # Soft CPU architecture
             export CPU_VARIANT=minimal      # Use a resource-constrained variant to make up5k happy
             export PLATFORM=orangecrab      # Target platform Icebreaker, or PLATFORM=tinyfpga_bx for TinyFPGA BX
             export FIRMWARE=micropython
             export TARGET=base
             export HDMI2USB_UDEV_IGNORE=1
             source ./scripts/enter-env.sh
             cd ..
             cd gateware/litex_ddr3_test
             python OrangeCrab-bitstream.py base
             
